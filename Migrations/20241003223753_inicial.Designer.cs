// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tp_Peliculas.Models;

#nullable disable

namespace Tp_Peliculas.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241003223753_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tp_Peliculas.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PeliculaActoresId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeliculaActoresId");

                    b.ToTable("Actores");
                });

            modelBuilder.Entity("Tp_Peliculas.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PeliculaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeliculaId");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Tp_Peliculas.Models.Pelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaEstreno")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<int?>("PeliculaActoresId")
                        .HasColumnType("int");

                    b.Property<string>("Portada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resumen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PeliculaActoresId");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("Tp_Peliculas.Models.PeliculaActores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PeliculaId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PeliculasActores");
                });

            modelBuilder.Entity("Tp_Peliculas.Models.Actor", b =>
                {
                    b.HasOne("Tp_Peliculas.Models.PeliculaActores", null)
                        .WithMany("Actores")
                        .HasForeignKey("PeliculaActoresId");
                });

            modelBuilder.Entity("Tp_Peliculas.Models.Genero", b =>
                {
                    b.HasOne("Tp_Peliculas.Models.Pelicula", null)
                        .WithMany("Generos")
                        .HasForeignKey("PeliculaId");
                });

            modelBuilder.Entity("Tp_Peliculas.Models.Pelicula", b =>
                {
                    b.HasOne("Tp_Peliculas.Models.PeliculaActores", null)
                        .WithMany("Peliculas")
                        .HasForeignKey("PeliculaActoresId");
                });

            modelBuilder.Entity("Tp_Peliculas.Models.Pelicula", b =>
                {
                    b.Navigation("Generos");
                });

            modelBuilder.Entity("Tp_Peliculas.Models.PeliculaActores", b =>
                {
                    b.Navigation("Actores");

                    b.Navigation("Peliculas");
                });
#pragma warning restore 612, 618
        }
    }
}
